buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://jitpack.io' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:4.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.20'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.mod_version
group project.mod_group

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven/' }
    maven { url = 'https://impactdevelopment.github.io/maven/' }
    maven { url = 'https://jitpack.io' }
}

minecraft {
    mappings channel: "$mappings_channel", version: "$mappings_version"

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'com.kisman.cc.mixin.KismanMixinLoader'
            property 'mixin.env.disableRefMap', 'true'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

configurations {
    library
}

dependencies {
    minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"

    library('org.spongepowered:mixin:0.8.5') {
        exclude module: 'commons-io'
        exclude module: 'gson'
        exclude module: 'guava'
    }

    annotationProcessor('org.spongepowered:mixin:0.8.5:processor') {
        exclude module: 'gson'
    }

    library group: 'com.github.ZeroMemes', name: 'alpine', version: '1.9'
    library group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.1'

    library group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    library group: 'com.sun.net.httpserver', name: 'http', version: '20070405'

    library group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "$kotlin_version"
    library group: "org.jetbrains", name: "annotations", version: "$annotations_version"

    implementation configurations.library
}

mixin {
    defaultObfuscationEnv 'searge'
    sourceSets {
        main {
            ext.refMap = 'mixins.lavahack-public.refmap.json'
        }
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        include 'mcmod.info'
        expand version: version, 'mcversion': minecraft_version
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

reobf {
    shadowJar { }
}

shadowJar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.lavahack-public.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'com.kisman.cc.mixin.KismanMixinLoader',
                'ForceLoadAsMod': 'true'
        )
    }

    exclude '**/module-info.class',
            'DebugProbesKt.bin',
            'META-INF/proguard/**',
            'META-INF/versions/**',
            'META-INF/**.RSA',
            'META-INF/com.android.tools/**',
            'META-INF/*.kotlin_module',
            'kotlin/**/*.kotlin_metadata',
            'kotlin/**/*.kotlin_builtins',
            'META-INF/*.version'

    configurations = [project.configurations.library]
    classifier = 'release'
}

build {
    dependsOn(shadowJar)
}