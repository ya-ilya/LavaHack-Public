package com.kisman.cc.module.exploit;

import com.kisman.cc.module.Category;
import com.kisman.cc.module.Module;
import com.kisman.cc.setting.Setting;
import com.kisman.cc.util.InventoryUtil;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.RayTraceResult;
import org.lwjgl.input.Mouse;

public class MiddleClick extends Module {
    private final Setting mode = new Setting("Mode", this, Mode.Obby);
    private final Setting switchMode = new Setting("SwitchMode", this, SwitchMode.Silent);

    public MiddleClick() {
        super("MiddleClick", Category.EXPLOIT);

        register(mode);
        register(switchMode);
    }

    public boolean isBeta() {
        return true;
    }

    public void update() {
        if (mc.player == null || mc.world == null) return;
        if (mc.currentScreen == null && Mouse.isButtonDown(2)) {
            int oldSlot = mc.player.inventory.currentItem;

            switch (mode.getValString()) {
                case "Exp": {
                    int expSlot = InventoryUtil.findItem(Items.ENDER_PEARL, 0, 9);

                    if (expSlot == -1) break;

                    switch (switchMode.getValString()) {
                        case "Normal":
                            InventoryUtil.switchToSlot(expSlot, false);
                            break;
                        case "Silent":
                            InventoryUtil.switchToSlot(expSlot, true);
                            break;
                    }

                    mc.player.inventory.currentItem = expSlot;
                    mc.playerController.processRightClick(mc.player, mc.world, EnumHand.MAIN_HAND);
                    break;
                }
                case "Pearl": {
                    int pearlSlot = InventoryUtil.findItem(Items.ENDER_PEARL, 0, 9);

                    if (pearlSlot == -1) break;

                    switch (switchMode.getValString()) {
                        case "Normal":
                            InventoryUtil.switchToSlot(pearlSlot, false);
                            break;
                        case "Silent":
                            InventoryUtil.switchToSlot(pearlSlot, true);
                            break;
                    }

                    mc.player.inventory.currentItem = pearlSlot;
                    mc.playerController.processRightClick(mc.player, mc.world, EnumHand.MAIN_HAND);
                    break;
                }
                case "Obby": {
                    if (mc.objectMouseOver == null) {
                        return;
                    } else if (mc.objectMouseOver.typeOfHit == RayTraceResult.Type.BLOCK) {
                        int obbySlot = InventoryUtil.findBlock(Blocks.OBSIDIAN, 0, 9);

                        if (obbySlot == -1) break;

                        switch (switchMode.getValString()) {
                            case "Normal":
                                InventoryUtil.switchToSlot(obbySlot, false);
                                break;
                            case "Silent":
                                InventoryUtil.switchToSlot(obbySlot, true);
                                break;
                        }

                        mc.player.inventory.currentItem = obbySlot;
                        mc.player.connection.sendPacket(new CPacketPlayerTryUseItemOnBlock());
                    }
                    break;
                }
            }

            if (switchMode.getValString().equals(SwitchMode.Silent.name()) && oldSlot != -1) InventoryUtil.switchToSlot(oldSlot, true);
        }
    }

    public enum Mode {
        Exp,
        Pearl,
        Obby
    }

    public enum SwitchMode {
        Normal,
        Silent
    }
}
